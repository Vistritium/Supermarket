<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="backend.core.model.Products">
        <id name="idProducts">
            <column name="idProducts" />
            <generator class="identity" />
        </id>
        
        <property name="name" type="string">
            <column name="name" length="45" not-null="true" />
        </property>
        
        <property name="count" type="java.lang.Integer">
            <column name="count" length="45" not-null="true" />
        </property>
        
        <property name="price" type="java.lang.Float">
            <column name="price" length="45" not-null="true" />
        </property>
        
        <property name="manufacturer" type="java.lang.Integer">
            <column name="manufacturer" length="45" not-null="true" />
        </property>
        
        <set name="suppliers" table="products_has_suppliers" 
        	inverse="false" lazy="true" fetch="select" cascade="all" >
            <key>
                <column name="idProducts" not-null="true" />
            </key>
            <many-to-many entity-name="backend.core.model.Suppliers">
                <column name="idSuppliers" not-null="true" />
            </many-to-many>
        </set>
        
        <set name="attributes" table="products_has_attributes" 
        	inverse="false" lazy="true" fetch="select" cascade="all" >
            <key>
                <column name="idProducts" not-null="true" />
            </key>
            <many-to-many entity-name="backend.core.model.Attributes">
                <column name="idAttributes" not-null="true" />
            </many-to-many>
        </set>
        
        <set name="orders" table="Orders" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="idProducts" not-null="true" />
            </key>
            <one-to-many class="backend.core.model.Orders" />
        </set>
        
        <many-to-one name="category" class="backend.core.model.Category" fetch="select">
            <column name="idCategory" not-null="true" />
        </many-to-one>
        
        
    </class>
</hibernate-mapping>
